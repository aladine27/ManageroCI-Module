# name: CI Workflow

# on:
#   workflow_dispatch: # Permet le déclenchement manuel via l'API

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
#       - name: Run a script
#         run: echo "Hello, world!"

name: CI Workflow

# Déclencheurs du workflow
on:
  push:                 # Déclenchement lors d'un push
    branches:
      - main            # Sur la branche principale
  pull_request:         # Déclenchement lors d'une pull request
    branches:
      - main
  workflow_dispatch:    # Permet de déclencher manuellement le workflow

# Définition des jobs
jobs:
  build:
    runs-on: ubuntu-latest  # Spécifie que le job tourne sur une machine Ubuntu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2  # Action pour cloner le code du dépôt

      - name: Set up JDK 11
        uses: actions/setup-java@v2  # Action pour installer Java
        with:
          java-version: 11          # Spécifie la version de Java à utiliser

      - name: Build with Maven
        run: mvn -B package --file pom.xml  # Commande pour construire le projet avec Maven

      - name: Run tests
        run: mvn test                       # Commande pour exécuter les tests

      - name: Archive Artifacts
        uses: actions/upload-artifact@v2   # Action pour sauvegarder les résultats de la construction
        with:
          name: my-artifact                # Nom sous lequel l'artefact sera enregistré
          path: target/                    # Chemin vers l'artefact à sauvegarder

  # Job pour analyser le code avec SonarQube (optionnel)
  # code_analysis:
  #   runs-on: ubuntu-latest
  #   needs: build                     # Ce job dépend du job 'build'
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Set up JDK 11
  #       uses: actions/setup-java@v2
  #       with:
  #         java-version: 11

  #     - name: Cache SonarQube packages
  #       uses: actions/cache@v2
  #       with:
  #         path: ~/.sonar/cache
  #         key: ${{ runner.os }}-sonar
  #         restore-keys: |
  #           ${{ runner.os }}-sonar

  #     - name: Run SonarQube Scan
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}  # Le jeton d'authentification pour SonarQube
  #       run: mvn sonar:sonar


